name: Validate and Tag Pull Requests
on:
  pull_request:
    branches:
      - "*"

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure only allowed files are changed
        run: |
          for f in $(git diff --name-only origin/main...HEAD); do
            # 1) Block any README.md immediately
            if [[ "$f" == *README.md ]]; then
              echo "❌ PR modifies a README file: $f"
              exit 1
            fi

            # 2) Allow teams.md or anything under submissions/
            if [[ "$f" == teams.md || "$f" == submissions/* ]]; then
              continue
            fi

            # 3) Everything else is unauthorized
            echo "❌ PR modifies unauthorized file: $f"
            exit 1
          done

          echo "✅ All changed files are authorized."

      - name: Categorize PR files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            teams:
              - 'teams.md'
            day1:
              - 'submissions/**/day1/**'
            day2:
              - 'submissions/**/day2/**'
            final:
              - 'submissions/**/final/**'

      - name: Reject PRs touching both teams.md and submissions
        if: |
          steps.filter.outputs.teams == 'true' &&
          (steps.filter.outputs.day1 == 'true' ||
           steps.filter.outputs.day2 == 'true' ||
           steps.filter.outputs.final == 'true')
        run: |
          echo "❌ You cannot edit teams.md and submit a file in the same PR."
          exit 1

      - name: Reject PRs touching multiple days
        run: |
          day1="${{ steps.filter.outputs.day1 }}"
          day2="${{ steps.filter.outputs.day2 }}"
          final="${{ steps.filter.outputs.final }}"

          touched_days=0
          if [ "$day1" = "true" ]; then
            touched_days=$((touched_days + 1))
          fi
          if [ "$day2" = "true" ]; then
            touched_days=$((touched_days + 1))
          fi
          if [ "$final" = "true" ]; then
            touched_days=$((touched_days + 1))
          fi

          if [ "$touched_days" -gt 1 ]; then
            echo "❌ You can only submit for one day at a time (day1 OR day2 OR final)."
            exit 1
          fi

          echo "✅ Submission concerns only one day."

      - name: Reject invalid PR type
        if: |
          steps.filter.outputs.teams == 'false' &&
          steps.filter.outputs.day1 == 'false' &&
          steps.filter.outputs.day2 == 'false' &&
          steps.filter.outputs.final == 'false'
        run: |
          echo "❌ This PR does not match any of the allowed types (teams.md entry or submissions)."
          exit 1

      - name: Extract and validate team name
        if: steps.filter.outputs.teams == 'false'
        id: teamname
        run: |
          team_names=$(git diff --name-only origin/main...HEAD | grep '^submissions/' | cut -d'/' -f2 | sort | uniq)
          team_count=$(echo "$team_names" | wc -l)

          if [ "$team_count" -ne 1 ]; then
            echo "❌ PR must only concern one team. Found teams: $team_names"
            exit 1
          fi

          echo "TEAM_NAME=$team_names" >> "$GITHUB_ENV"
          echo "✅ Team detected: $team_names"

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r .scripts/requirements.txt

      - name: Run check_submissions.py
        run: |
          python3 .scripts/check_submissions.py

      - name: Label with team name
        if: steps.filter.outputs.teams == 'false'
        run: |
          label="${{ env.TEAM_NAME }}"
          if ! gh label create "$label" --color "ededed" --description "Label for team $label"; then
            continue
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Label as Team entry
        if: steps.filter.outputs.teams == 'true'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: team
          github_token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Label as Day 1 submission
        if: steps.filter.outputs.day1 == 'true'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: day1
          github_token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Label as Day 2 submission
        if: steps.filter.outputs.day2 == 'true'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: day2
          github_token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Label as Final submission
        if: steps.filter.outputs.final == 'true'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: final
          github_token: "${{ secrets.GITHUB_TOKEN }}"
